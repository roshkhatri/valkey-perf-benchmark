name: Determine commits to benchmark

on:
  workflow_call:
    inputs:
      branch:
        description: "Branch to scan (default: unstable)"
        type: string
        default: unstable
      max_commits:
        description: "How many unbenchmarked commits to return"
        type: number
        default: 1
    outputs:
      commit_ids:
        description: "JSON array of commit SHAs"
        value: ${{ jobs.determine.outputs.commit_ids }}

jobs:
  determine:
    runs-on: ubuntu-latest
    outputs:
      commit_ids: ${{ steps.select.outputs.commit_ids }}

    steps:
      - name: Checkout Valkey
        uses: actions/checkout@v4
        with:
          repository: valkey-io/valkey
          ref: ${{ inputs.branch }}

      - name: Install tooling
        run: sudo apt-get update && sudo apt-get install -y jq awscli
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Download completed_commits.json from S3
        run: |
          aws s3 cp s3://valkey-benchmark-results/completed_commits.json completed_commits.json \
            || echo '[]' > completed_commits.json

      - name: Select next unbenchmarked commits
        id: select
        env:
          MAX_COMMITS: ${{ inputs.max_commits }}
        run: |
          completed=$(jq -r '.[]' completed_commits.json | tr '\n' ' ')
          to_benchmark=()
          for sha in $(git rev-list ${{ inputs.branch }}); do
            if [[ ! " $completed " =~ " $sha " ]]; then
              to_benchmark+=("$sha")
            fi
            [[ ${#to_benchmark[@]} -ge $MAX_COMMITS ]] && break
          done

          commits_json=$(printf '%s\n' "${to_benchmark[@]}" | jq -R . | jq -s .)
          echo "commit_ids=$commits_json" >> "$GITHUB_OUTPUT"
          echo "Chosen commits: $commits_json"
