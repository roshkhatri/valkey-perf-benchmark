name: Valkey Continuous Benchmark

on:
  workflow_dispatch:
    inputs:
      max_commits:
        description: "Maximum number of commits to benchmark"
        required: false
        default: '3'
        type: string
  push:
  schedule:
    - cron: '*/20 * * * *'

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

permissions:
  id-token: write
  contents: read

jobs:
  valkey_continuous_benchmark:
    env:
      BRANCH: unstable     
      MAX_COMMITS: ${{ inputs.max_commits || '3' }}  

    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Checkout Valkey
        uses: actions/checkout@v4
        with:
          repository: valkey-io/valkey
          ref: ${{ env.BRANCH }}
          fetch-depth: 0  # Fetch all history for the branch
          path: valkey
        
      - name: Checkout Valkey Benchmark
        uses: actions/checkout@v4
        with:
          path: valkey-perf-benchmark
          
      - name: Install tooling
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Download completed_commits.json from S3
        working-directory: valkey
        run: |
          aws s3 cp s3://${{ secrets.AWS_S3_BUCKET }}/completed_commits.json completed_commits.json \
            || echo '[]' > completed_commits.json

      - name: Determine commits to benchmark
        id: determine_commits
        working-directory: valkey
        run: |
            # Convert completed_commits.json to newline-separated SHA list
            jq -r '.[]' completed_commits.json > seen.txt || echo > seen.txt

            to_benchmark=()

            echo "Scanning commits from branch: $BRANCH"

            echo "Most recent 10 commits from branch:"
            git rev-list "$BRANCH" | head -n 10 || true 
            
            for sha in $(git rev-list unstable); do
              echo "Checking commit: $sha"
              grep -q "^$sha$" seen.txt || to_benchmark+=("$sha")
              [[ ${#to_benchmark[@]} -ge $MAX_COMMITS ]] && break
            done
            echo "commit_ids=${to_benchmark[*]}" >> "$GITHUB_OUTPUT"
  
      - name: benchmark_commits
        working-directory: valkey-perf-benchmark
        run: |
          echo "===== BENCHMARKING ${{ steps.determine_commits.outputs.commit_ids }} ====="

          # -- run benchmark
          python benchmark.py \
            --commits ${{ steps.determine_commits.outputs.commit_ids }} \
            --config ./configs/benchmark-configs.json
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: valkey-perf-benchmark/results
      
      - name: Upload metrics to S3  
        env:
          COMMITS: ${{ steps.determine_commits.outputs.commit_ids }}
        run: |
          ROOT_DIR="valkey-perf-benchmark/results"
          for sha in $COMMITS; do
            echo "Uploading metrics for $sha"
            aws s3 cp "$ROOT_DIR/$sha/metrics.json" \
              "s3://${{ secrets.AWS_S3_BUCKET }}/results/$sha/metrics.json"
          done

      - name: Update completed_commits.json
        working-directory: valkey
        run: |
          # Read existing completed commits
          if [[ -f completed_commits.json ]]; then
            jq '.' completed_commits.json > temp.json
          else
            echo '[]' > temp.json
          fi

          # Add new commits to the list
          for sha in ${{ steps.determine_commits.outputs.commit_ids }}; do
            if ! jq -e ". | index(\"$sha\")" temp.json > /dev/null; then
              jq ". + [\"$sha\"]" temp.json > updated.json && mv updated.json temp.json
            fi
          done

          # Write back to completed_commits.json
          mv temp.json completed_commits.json

          # Upload updated completed_commits.json to S3
          aws s3 cp completed_commits.json "s3://${{ secrets.AWS_S3_BUCKET }}/completed_commits.json"